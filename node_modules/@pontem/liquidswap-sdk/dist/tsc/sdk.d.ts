import { AptosClient, ClientConfig } from 'aptos';
import { SwapModule } from './modules/SwapModule';
import { ResourcesModule } from './modules/ResourcesModule';
import { AptosResourceType } from './types/aptos';
import { LiquidityModule } from './modules/LiquidityModule';
interface INetworkOptions {
    nativeToken?: AptosResourceType;
    modules?: {
        CoinInfo: AptosResourceType;
        CoinStore: AptosResourceType;
        Scripts: AptosResourceType;
    } & Record<string, AptosResourceType>;
    resourceAccount?: string;
    moduleAccount?: string;
    moduleAccountV05?: string;
    resourceAccountV05?: string;
}
export interface SdkOptions {
    nodeUrl: string;
    nodeOptions?: Partial<ClientConfig>;
    networkOptions?: INetworkOptions;
}
export interface ICurves {
    stable: string;
    uncorrelated: string;
    stableV05: string;
    uncorrelatedV05: string;
}
export declare class SDK {
    protected _client: AptosClient;
    protected _swap: SwapModule;
    protected _liquidity: LiquidityModule;
    protected _resources: ResourcesModule;
    protected _networkOptions: Required<INetworkOptions>;
    protected _curves: ICurves;
    get Swap(): SwapModule;
    get Resources(): ResourcesModule;
    get Liquidity(): LiquidityModule;
    get client(): AptosClient;
    get networkOptions(): Required<INetworkOptions>;
    get curves(): ICurves;
    constructor(options: SdkOptions);
}
export {};
