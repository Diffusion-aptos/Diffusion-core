import { Decimal } from 'decimal.js';
export declare function calcReceivedLP({ x, y, xReserve, yReserve, lpSupply, }: {
    x: number;
    y: number;
    xReserve: Decimal;
    yReserve: Decimal;
    lpSupply?: number;
}): string;
/**
 * Calculate output amount after burned
 * @param {number} xReserve - first coin reserves
 * @param {number} yReserve - second coin reserves
 * @param {number} lpSupply - liquidity pool supply value
 * @param {number} toBurn - burn amount
 */
export declare function calcOutputBurnLiquidity({ xReserve, yReserve, lpSupply, toBurn, }: {
    xReserve: Decimal;
    yReserve: Decimal;
    lpSupply: Decimal;
    toBurn: Decimal;
}): {
    x: Decimal;
    y: Decimal;
} | undefined;
export declare function getOptimalLiquidityAmount(xDesired: Decimal, xReserve: Decimal, yReserve: Decimal): Decimal;
export declare function getPoolStr(coinX: string, coinY: string, curve: string, modulesLiquidityPool: string): string;
